Went through the git Lab tutorials on 10/17/2024 
Created one of my GitHub accounts in march 2021 i believe

igorc@DESKTOP-50EPL8V MINGW64 ~/assignment2 (master)
$ git status > docs/status.txt

igorc@DESKTOP-50EPL8V MINGW64 ~/assignment2 (master)
$ git add docs/status.txt
warning: in the working copy of 'docs/status.txt', LF will be replaced by CRLF the next time Git touches it

igorc@DESKTOP-50EPL8V MINGW64 ~/assignment2 (master)
$ git commit -m "Added git status output to docs/status.txt"
[master a68741a] Added git status output to docs/status.txt
 1 file changed, 9 insertions(+)
 create mode 100644 docs/status.txt

How many commits have been done to the repository so far?

igorc@DESKTOP-50EPL8V MINGW64 ~/assignment2 (master)
$ git log --oneline
af0bb28 (HEAD -> master) Added empty answers.txt file
a68741a Added git status output to docs/status.txt
a610186 updated README.md with my name and FSUID
f4975e5 (origin/master, origin/HEAD) -> Adding an empty README.md file
e424a92 -> Tracking .gitignore
03106e9 -> Declared the trivial destructors for all classes -> Fully formatted toString methods for all classes -> Added test cases in the main method for testing the implementations -> Added validation on value for engine sizes in the  Car class
f9cd890 -> Partial implementation of PoweredVehicle and Car -> Definition of virtual functions
f9c24b0 Refactored Vehicle class to separate definition and declarations Added mileageEstimate abstract method to Vehicle Implemented the Bicycle class
4f6c88c Base Vehicle class created


When was the README.md file modified last?

igorc@DESKTOP-50EPL8V MINGW64 ~/assignment2 (master)
$ git log README.md
commit a610186a46b75ef602661defbc9d01b4fcc3ffd4
Author: igorfcouto <igorfcouto60@gmail.com>
Date:   Thu Oct 17 12:40:46 2024 -0400

    updated README.md with my name and FSUID

commit f4975e5d56ff331762b318bfd12c5236e0299f25 (origin/master, origin/HEAD)
Author: Esteban Parra <estebanpr014@gmail.com>
Date:   Wed Sep 25 18:33:08 2019 -0400

    -> Adding an empty README.md file

Branches are used in a Git repository to allow multiple developers to work on different features simultaneously without conflicts.
Also, to create isolated environments for testing new features before merging into the main branch.

The difference between git log is that it shows the commit history and git status shows the working directory and the state of files(modified, staged or untracked)

What command would you use to see the commits where “Vehicle.h” was one of the committed files?

igorc@DESKTOP-50EPL8V MINGW64 ~/assignment2 (master)
$ git log -- Vehicle.h
commit 03106e92a1e36708334c69dd071088c6d0937b1d
Author: Esteban Parra <estebanpr014@gmail.com>
Date:   Wed Sep 11 16:58:59 2019 -0400

    -> Declared the trivial destructors for all classes
    -> Fully formatted toString methods for all classes
    -> Added test cases in the main method for testing the implementations
    -> Added validation on value for engine sizes in the  Car class

commit f9cd890b3f89fbe5920a1fdf7da34ee915ba27b9
Author: Esteban Parra <estebanpr014@gmail.com>
Date:   Thu Sep 5 18:42:39 2019 -0400

    -> Partial implementation of PoweredVehicle and Car
    -> Definition of virtual functions

commit f9c24b027e6275ff6a1911241014c44971b4e8d0
Author: Esteban Parra <estebanpr014@gmail.com>
Date:   Thu Sep 5 18:04:36 2019 -0400

    Refactored Vehicle class to separate definition and declarations
    Added mileageEstimate abstract method to Vehicle
    Implemented the Bicycle class

commit 4f6c88c953f4601929df7980a19dcdaee4f13854
Author: Esteban Parra <estebanpr014@gmail.com>
Date:   Thu Sep 5 14:59:19 2019 -0400

    Base Vehicle class created

What command would you use to see the commits whose commit message contains the word “file”?


igorc@DESKTOP-50EPL8V MINGW64 ~/assignment2 (master)
$ git log --grep="file"
commit af0bb281867e2f54418316e6a5b3b8dda7b32d03 (HEAD -> master)
Author: igorfcouto <igorfcouto60@gmail.com>
Date:   Thu Oct 17 12:43:14 2024 -0400

    Added empty answers.txt file

commit f4975e5d56ff331762b318bfd12c5236e0299f25 (origin/master, origin/HEAD)
Author: Esteban Parra <estebanpr014@gmail.com>
Date:   Wed Sep 25 18:33:08 2019 -0400

    -> Adding an empty README.md file


In the context of object-oriented programming (I) What is inheritance? (II) What is polymorphism? (III) What is encapsulation?

Inheritance is a mechanism where one class acquires the properties and behaviors (methods) of another class.

Polymorphism is the ability of different classes to be treated as instances of the same class through inheritance, allowing methods to be overridden or overloaded.

Encapsulation is the bundling of data and methods into a single unit (class) and restricting direct access to some of an object’s components.

In the "Dictator and Lieutenants" workflow a lead developer (the dictator) merges all changes after lieutenants review and handle their section of the project. The "Integration Manager" workflow involves a manager responsible for collecting and merging everyone's changes.

The benefits of the "Dictator and Lieutenants" Workflow are that for a large team, this workflow reduces the risk of conflicts by having lieutenants oversee specific areas of the codebase, improving scalability and code quality.

How would a team of 100 developers benefit from following the “Dictator and Lieutenants” workflow instead of the “Centralized” workflow?

The Dictator and Lieutenants workflow would provide a team of 100 developers with a structured way to manage a large codebase, maintain code quality, and speed up integration for a large team, while the centralized workflow can become unmanageable with so many developers. 